{"version":3,"sources":["components/SectionTitle.js","components/FeedbackOptions.js","components/Notification.js","components/VoitingStatistics.js","App.js","index.js","components/FeedbackOptions.module.css","components/VoitingStatistics.module.css"],"names":["SectionTitle","children","FeedbackOptions","onClickVoteGood","onClickVoteNeutral","onClickVoteBad","className","styles","buttons","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","statistics","conclusion","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gPASeA,EAPM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,gCACE,uDACCA,M,gBCeUC,EAdS,SAAC,GAAD,IAAEC,EAAF,EAAEA,gBAAiBC,EAAnB,EAAmBA,mBAAoBC,EAAvC,EAAuCA,eAAvC,OACtB,gCACE,wBAAQC,UAAWC,IAAOC,QAASC,KAAK,SAASC,QAASP,EAA1D,kBACA,wBAAQG,UAAWC,IAAOC,QAASC,KAAK,SAASC,QAASN,EAA1D,qBACA,wBAAQE,UAAWC,IAAOC,QAASC,KAAK,SAASC,QAASL,EAA1D,qBCCWM,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,4BAAIA,K,gBCyBSC,EAxBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,4CACCD,EACK,qBAAIX,UAAWC,IAAOY,WAAtB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,qBAAIV,UAAWC,IAAOa,WAAtB,oBAA0CH,KAC1C,qBAAIX,UAAWC,IAAOa,WAAtB,gCAAsDF,EAAtD,UAEH,cAAC,EAAD,CAAcN,QAAS,0BCkDjBS,E,4MA3DbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,gBAAkB,WAChB,EAAKoB,UAAS,SAAAC,GAAS,MAAK,CAC1BV,KAAMU,EAAUV,KAAO,O,EAI3BV,mBAAqB,WACnB,EAAKmB,UAAS,SAAAC,GAAS,MAAK,CAC1BT,QAASS,EAAUT,QAAU,O,EAIjCV,eAAiB,WACf,EAAKkB,UAAS,SAAAC,GAAS,MAAK,CAC1BR,IAAKQ,EAAUR,IAAM,O,EAIzBS,mBAAqB,WAEnB,OADc,EAAKH,MAAMR,KAAO,EAAKQ,MAAMP,QAAU,EAAKO,MAAMN,K,EAIlEU,gCAAkC,SAAAT,GAEhC,OAD8C,IAAlB,EAAKK,MAAMR,KAAcG,G,4CAIvD,WACE,IAAMA,EAAQU,KAAKF,qBACbP,EAAqBU,KAAKC,MAC9BF,KAAKD,gCAAgCT,IAGvC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEd,gBAAiBwB,KAAKxB,gBACtBC,mBAAoBuB,KAAKvB,mBACzBC,eAAgBsB,KAAKtB,iBAEvB,cAAC,EAAD,CACES,KAAMa,KAAKL,MAAMR,KACjBC,QAASY,KAAKL,MAAMP,QACpBC,IAAKW,KAAKL,MAAMN,IAChBC,MAAOA,EACPC,mBAAoBA,W,GArDZY,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACM,cAAC,EAAD,MAENC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,QAAU,mC,kBCA5BD,EAAOC,QAAU,CAAC,WAAa,sCAAsC,WAAa,yC","file":"static/js/main.45473e85.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <div>\r\n    <h2>Please leave feedback</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default SectionTitle;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\n\r\n\r\nconst FeedbackOptions = ({onClickVoteGood, onClickVoteNeutral, onClickVoteBad}) => (\r\n  <div>\r\n    <button className={styles.buttons} type=\"button\" onClick={onClickVoteGood}>Good</button>\r\n    <button className={styles.buttons} type=\"button\" onClick={onClickVoteNeutral}>Neutral</button>\r\n    <button className={styles.buttons} type=\"button\" onClick={onClickVoteBad}>Bad</button>\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onClickVoteGood: PropTypes.func.isRequired,\r\n  onClickVoteNeutral: PropTypes.func.isRequired,\r\n  onClickVoteBad: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from './Notification';\r\nimport styles from './VoitingStatistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <h2>Statistics</h2>\r\n    {total ? (\r\n          <ul className={styles.statistics}>\r\n            <li>Good: {good}</li>\r\n            <li>Neutral: {neutral}</li>\r\n            <li>Bad: {bad}</li>\r\n            <li className={styles.conclusion}>Total: {total}</li>\r\n            <li className={styles.conclusion}>Positive feedback: {positivePercentage}%</li>\r\n          </ul>\r\n    ) : (<Notification message={'No feedback given'} />)\r\n    }\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\n\nimport SectionTitle from './components/SectionTitle';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/VoitingStatistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onClickVoteGood = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }));\n  };\n\n  onClickVoteNeutral = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }));\n  };\n\n  onClickVoteBad = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    const positivePercentage = (this.state.good * 100) / total;\n    return positivePercentage;\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = Math.round(\n      this.countPositiveFeedbackPercentage(total),\n    );\n\n    return (\n      <SectionTitle>\n        <FeedbackOptions\n          onClickVoteGood={this.onClickVoteGood}\n          onClickVoteNeutral={this.onClickVoteNeutral}\n          onClickVoteBad={this.onClickVoteBad}\n        />\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      </SectionTitle>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__3GVtQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"VoitingStatistics_statistics__115cJ\",\"conclusion\":\"VoitingStatistics_conclusion__ZPwEn\"};"],"sourceRoot":""}